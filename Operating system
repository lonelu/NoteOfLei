2018-04-15
1. OS is what control hardware.
2. OS include Abstraction, Mechanism, Policies
3. User/kernel boundary and system call flow chart
4. System calls include: Process control, File Manipulation, Device Manipulation, Information maintenance, Communication, Protection.
5. Modular OS include Module (work load) at user-level and Module (interface) at OS
6. Linux architecture: User---Standard utility program---standard library---linux operating system---Hardware

2018-04-16
1. Process is Instance of an executuing program.
2. structure of Process: text, data, heap, stack...
3. data structure Process conrol Block maintained by OS to manage every process.
4. context switch cost between process running and idle
5. Process life cyclye: New, Ready, Runing, Waiting, Terminated
6. Process creation:Fork copy parent PCB, Exec replace child image
7. CUP scheduler: which and how long process run. 
8. Process interaction: Inter process communication by channel, Shared Memory IPC. 

2018-04-17
1. Threads and Concurrency.
2. PCB or Process control Block contains: code data files, regs, stacks which can work with multiple threads.
3. Single CPU also benefit from parallel. 
4. Thread Mechanism. 
   a. Mutual Exclusion - exclusive access to only on thread at a time  - mutex
   b. waiting - Specific condition - condition variable
5. Thread creation - thread data structure (thread ID, PC, SP, registers, stack, attributes)
6. Mutex: Locked, owner, blocked_threads. 
   Lock(mutex){ critical condition }
7. Condition Variable : Mutex ref, waiting threads
8. Reader/Writer example !!!
9. Possible thread related bug: spurious wake-ups, Deadlocks,
10. Kernel vs User-level Threads
11. multi-threading pattern: 
    a. Boss-worker Pattern
    b. Pipeline Pattern
    c. Layered Pattern
    
2018-04-18    
1. pthreads or POSIX Threads (portable Operating System Interface) is realized version of Burrell's Mechanism. 
2. int pthread_create( pthread_t * thread, ...) 
   stack size, inheritance, joinable, scheduling policy, priority, system/process scope.
3. Detaching pthreads (cannot join)

Install Ubuntu on Windows 10 and run first C program
a. Control Panel -> Programs -> Turn Windwows features on -> Linux subsystem on
b. Windows Store -> Search ubuntu -> install
c. @: sudo apt update -> sudo apt gcc g++ make cmake
d. Generate hello.c file by nano -> @: gcc -o hello hello.c -> @: ./hello

Run pthread example from the course
a. @: cp /mnt/___ ~/pthread
b. @: gcc -pthread -o ___ ___.c -> ./___

C C++ Java on Eclipse
a. Install Eclipse and Java SE Development Kit
a. open www.equation.com -> programming tool -> c c++ -> download the most recent gcc package -> install to C:\MinGW

2018-05-12
Thread design consideration
1. Thread-related Data Structure:
    User level thread
         Process Control Block (PCB)
    Kernel-level thread
2. Interrupt based on physical platform
   Signal based on operating system
3. Mask
4. Task Struct in Linux
